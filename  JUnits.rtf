{\rtf1\ansi\ansicpg1252\cocoartf2821
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 .SFNS-Bold;\f1\fnil\fcharset0 .SFNS-Regular;\f2\fnil\fcharset0 HelveticaNeue-Bold;
\f3\fnil\fcharset0 .AppleSystemUIFontMonospaced-Regular;}
{\colortbl;\red255\green255\blue255;\red14\green14\blue14;\red135\green5\blue129;\red0\green0\blue0;
\red151\green0\blue126;\red50\green91\blue97;\red20\green0\blue196;}
{\*\expandedcolortbl;;\cssrgb\c6700\c6700\c6700;\cssrgb\c60784\c13725\c57647;\csgray\c0;
\cssrgb\c66667\c5098\c56863;\cssrgb\c24706\c43137\c45490;\cssrgb\c10980\c0\c81176;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl324\slmult1\pardirnatural\partightenfactor0

\f0\b\fs34 \cf2 \uc0\u9989  Wof\'fcr ist JUnit da?
\f1\b0\fs28 \
\pard\tqr\tx100\tx260\li260\fi-260\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	JUnit ist eine 
\f2\b Bibliothek zum automatisierten Testen
\f1\b0 \
	\'95	Damit testest du, ob Methoden das 
\f2\b erw\'fcnschte Ergebnis liefern
\f1\b0 \
	\'95	Du vergleichst: 
\f2\b tats\'e4chliches Ergebnis
\f1\b0  vs. 
\f2\b erwartetes Ergebnis
\f1\b0 \
	\'95	Hilft dir, 
\f2\b Fehler fr\'fch zu erkennen
\f1\b0  und Programme 
\f2\b robuster
\f1\b0  zu machen\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl324\slmult1\pardirnatural\partightenfactor0

\f0\b\fs34 \cf2 \uc0\u9989  Wichtige JUnit-Annotationen:
\f1\b0\fs28 \
\pard\tqr\tx100\tx260\li260\fi-260\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	
\f3 \cf2 @Test
\f1 \cf2  \uc0\u8594  markiert eine Testmethode\
	\'95	
\f3 \cf2 @Before
\f1 \cf2  (JUnit 4) oder 
\f3 \cf2 @BeforeEach
\f1 \cf2  (JUnit 5) \uc0\u8594  wird 
\f2\b vor jedem Test
\f1\b0  ausgef\'fchrt (z.\uc0\u8239 B. f\'fcr Setup)\
	\'95	
\f3 \cf2 @After
\f1 \cf2  / 
\f3 \cf2 @AfterEach
\f1 \cf2  \uc0\u8594  wird 
\f2\b nach jedem Test
\f1\b0  ausgef\'fchrt (z.\uc0\u8239 B. um aufzur\'e4umen)\
	\'95	
\f3 \cf2 @BeforeClass
\f1 \cf2  / 
\f3 \cf2 @BeforeAll
\f1 \cf2  \uc0\u8594  einmal vor allen Tests (f\'fcr gemeinsame Vorbereitung)\
	\'95	
\f3 \cf2 @Ignore
\f1 \cf2  (JUnit 4) / 
\f3 \cf2 @Disabled
\f1 \cf2  (JUnit 5) \uc0\u8594  Test wird 
\f2\b \'fcbersprungen\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl324\slmult1\pardirnatural\partightenfactor0

\f0\fs34 \cf2 \uc0\u9989  Wichtig f\'fcr die Tests:
\f1\b0\fs28 \
\pard\tqr\tx100\tx260\li260\fi-260\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	Du verwendest 
\f2\b assertEquals(erwartet, tats\'e4chlich)
\f1\b0 \
\uc0\u8594  Test schl\'e4gt fehl, wenn die Werte 
\f2\b nicht gleich
\f1\b0  sind\
	\'95	Es gibt auch andere Assertions: 
\f3 \cf2 assertTrue
\f1 \cf2 , 
\f3 \cf2 assertFalse
\f1 \cf2 , 
\f3 \cf2 assertNull
\f1 \cf2 , 
\f3 \cf2 assertThrows\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\fs26 \cf3 @Test\cf4 \
\cf5 public\cf4  \cf5 void\cf4  testAdd() \{\
    int \cf6 result\cf4  = calculator.add(\cf7 2\cf4 , \cf7 3\cf4 );\
    assertEquals(\cf7 5\cf4 , result);\
\}}